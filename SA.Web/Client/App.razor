<Router AppAssembly="@typeof(Startup).Assembly">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
    </Found>
    <NotFound>
        <LayoutView Layout="@typeof(MainLayout)">
            <h4 id="page-load-error">Uh oh! There seems to be an error loading this page!</h4>
        </LayoutView>
    </NotFound>
</Router>

@inject ClientState State
@inject WebSocketManagerMiddleware WebSockets

@code {


    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await State.GetLocalData<GlobalSettings>();
        WebSockets.OnServerConnected += async () =>
        {
            State.OnUpdateTimesChanged += async () => 
            {
                if (State.PreviousLocalUpdateTimes != null && State.PreviousLocalUpdateTimes != State.LocalUpdateTimes)
                {
                    if (DateTime.Compare(State.PreviousLocalUpdateTimes.ChangelogDataUpdate, State.LocalUpdateTimes.ChangelogDataUpdate) < 0) await State.RequestChangelogData(true);
                }
                else await State.RequestChangelogData();
                if (State.PreviousLocalUpdateTimes != null && State.PreviousLocalUpdateTimes != State.LocalUpdateTimes)
                {
                    if (DateTime.Compare(State.PreviousLocalUpdateTimes.NewsDataUpdate, State.LocalUpdateTimes.NewsDataUpdate) < 0) await State.RequestNewsData(true);
                }
                else await State.RequestNewsData();
                if (State.PreviousLocalUpdateTimes != null && State.PreviousLocalUpdateTimes != State.LocalUpdateTimes)
                {
                    if (DateTime.Compare(State.PreviousLocalUpdateTimes.RoadmapDataUpdate, State.LocalUpdateTimes.RoadmapDataUpdate) < 0) await State.RequestRoadmapData(true);
                }
                else await State.RequestRoadmapData();
            }; 
            await State.RequestUpdateData();
        };
        await WebSockets.Connect(State);
    }
}