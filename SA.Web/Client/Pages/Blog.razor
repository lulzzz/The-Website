@page "/blog"

<main id="blog-container" class="container-fluid">
    <div class="row">
        <div class="col">
            @if (State.BlogData != null)
            {
                @foreach (BlogEntryData b in State.BlogData.BlogPosts.Reverse<BlogEntryData>())
                {
                    <BlogPost Entry="@b" />
                }
            }
        </div>
        <div class="col">
            @if (State.ChangelogData != null)
            {
                @foreach (ChangelogEntryData b in State.ChangelogData.ChangelogPosts.Reverse<ChangelogEntryData>())
                {
                    <ChangelogPost Entry="@b" />
                }
            }
        </div>
    </div>
</main>

@inject ClientState State

@code {      

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        State.OnBlogDataChanged += StateHasChanged;
        State.OnChangelogDataChanged += StateHasChanged;
        State.OnUpdateTimesChanged += async () =>
        {
            if (State.PreviousLocalUpdateTimes != null && State.PreviousLocalUpdateTimes != State.LocalUpdateTimes)
            {
                if (DateTime.Compare(State.PreviousLocalUpdateTimes.BlogDataUpdate, State.LocalUpdateTimes.BlogDataUpdate) < 0) await State.RequestBlogData(true);
            }
            else await State.RequestBlogData();
            if (State.PreviousLocalUpdateTimes != null && State.PreviousLocalUpdateTimes != State.LocalUpdateTimes)
            {
                if (DateTime.Compare(State.PreviousLocalUpdateTimes.ChangelogDataUpdate, State.LocalUpdateTimes.ChangelogDataUpdate) < 0) await State.RequestChangelogData(true);
            }
            else await State.RequestChangelogData();
        };
        if (State.LocalUpdateTimes != null)
        {
            await State.RequestBlogData();
            await State.RequestChangelogData();
        }
    }
}
