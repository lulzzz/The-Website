@page "/news"

<div id="news-page" class="row no-scroll">
    <div class="col-12 alt-scroll">
        @if (State.NewsData != null)
        {
            @if (State.NewsData.NewsPosts != null)
            {
                @foreach (NewsEntryData entry in State.NewsData.NewsPosts)
                {
                    <div class="row post-entry">
                        <div class="col">
                            <div class="row post-header">
                                <div class="col">
                                    <h4>@entry.Title</h4>
                                </div>
                            </div>
                            <div class="row post-content">
                                <div class="col">
                                    @foreach (string c in entry.Content)
                                    {
                                        @if (c.StartsWith("https://"))
                                        {
                                            @if (c.EndsWith(".webp") || c.EndsWith(".gif") || c.EndsWith(".png") || c.EndsWith("jpg"))
                                            {
                                                <div class="row justify-content-center">
                                                    <div class="col-auto">
                                                        <img src="@c" draggable="false" alt="Blog Image" />
                                                    </div>
                                                </div>
                                            }
                                            else
                                            {
                                                <a href="@c" target="_blank" draggable="false">@c</a>
                                            }
                                        }
                                        else
                                        {
                                            <p>
                                                @foreach (string f in c.Split(" "))
                                                {
                                                    @if (f.StartsWith("https://"))
                                                    {
                                                        <a href="@f" target="_blank" draggable="false">@f</a> @(" ")
                                                    }
                                                    else
                                                    {
                                                        @(f + " ")
                                                    }
                                                }
                                            </p>
                                        }
                                    }
                                </div>
                            </div>
                            <div class="row post-footer">
                                <div class="col">
                                    <small>
                                        Posted on @entry.Date.ToShortDateString() at @entry.Date.ToShortTimeString() @(entry.LastEditTime != null ?
                                        "and last edited on " + ((DateTime)entry.LastEditTime).ToShortDateString() + " at " + ((DateTime)entry.LastEditTime).ToShortTimeString() : string.Empty)
                                    </small>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
        }
    </div>
</div>

@inject ClientState State

@code {

    protected override async Task OnInitializedAsync()
    {
        State.OnNewsDataChanged += StateHasChanged;
        await base.OnInitializedAsync();
    }
}
