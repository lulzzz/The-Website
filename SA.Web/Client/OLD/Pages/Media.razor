@page "/media"

<main id="media-container" class="container-fluid">
    <div class="row">
        <div class="col">
            <div class="row justify-content-center">
                @if (State.PhotographyData != null)
                {
                    @foreach (MediaPhoto p in State.PhotographyData.Photos)
                    {
                        <MediaPhotographyElement Photo="p" />
                    }
                }
            </div>
        </div>
        <div class="col">
            <div class="row justify-content-center warning">
                <div class="col-auto">
                    <h6>Videos for <a href="https://store.steampowered.com/app/431960/Wallpaper_Engine/" target="_blank">Wallpaper Engine</a> will come when it is possible to record Star Citizen in 4k60fps without compromise!</h6>
                </div>
            </div>
        </div>
    </div>
</main>

@inject ClientState State

@code {    

    protected override async Task OnInitializedAsync()
    {
        State.OnPhotographyDataChanged += StateHasChanged;
        State.OnUpdateTimesChanged += async () =>
        {
            if (State.PreviousLocalUpdateTimes != null && State.PreviousLocalUpdateTimes != State.LocalUpdateTimes)
            {
                if (DateTime.Compare(State.PreviousLocalUpdateTimes.PhotographyDataUpdate, State.LocalUpdateTimes.PhotographyDataUpdate) < 0) await State.RequestPhotographyData(true);
            }
            else await State.RequestPhotographyData();
        };
        if (State.LocalUpdateTimes != null)
        {
            if (State.PhotographyData == null) await State.RequestPhotographyData();
        }
        await base.OnInitializedAsync();
    }
}
